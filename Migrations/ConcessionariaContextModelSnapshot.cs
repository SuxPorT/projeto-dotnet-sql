// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projeto_dotnet_sql.Models;

#nullable disable

namespace projeto_dotnet_sql.Migrations
{
    [DbContext(typeof(ConcessionariaContext))]
    partial class ConcessionariaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("projeto_dotnet_sql.Models.Acessorio", b =>
                {
                    b.Property<int>("AcessorioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcessorioId"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AcessorioId");

                    b.ToTable("Acessorios");
                });

            modelBuilder.Entity("projeto_dotnet_sql.Models.Proprietario", b =>
                {
                    b.Property<string>("CpfCnpj")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndicadorPessoa")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TelefoneId")
                        .HasColumnType("int");

                    b.HasKey("CpfCnpj");

                    b.ToTable("Proprietarios");
                });

            modelBuilder.Entity("projeto_dotnet_sql.Models.Telefone", b =>
                {
                    b.Property<int>("TelefoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TelefoneId"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TelefoneId");

                    b.ToTable("Telefones");
                });

            modelBuilder.Entity("projeto_dotnet_sql.Models.Veiculo", b =>
                {
                    b.Property<string>("NumeroChassi")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Ano")
                        .HasMaxLength(30)
                        .HasColumnType("int");

                    b.Property<string>("Cor")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProprietarioCpfCnpj")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Quilometragem")
                        .HasColumnType("float");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.Property<string>("VersaoSistema")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("NumeroChassi");

                    b.HasIndex("ProprietarioCpfCnpj");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("projeto_dotnet_sql.Models.Venda", b =>
                {
                    b.Property<int>("VendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendaId"), 1L, 1);

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroChassi")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("ValorComissao")
                        .HasColumnType("float");

                    b.Property<int>("VendedorId")
                        .HasColumnType("int");

                    b.HasKey("VendaId");

                    b.HasIndex("NumeroChassi");

                    b.HasIndex("VendedorId");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("projeto_dotnet_sql.Models.Vendedor", b =>
                {
                    b.Property<int>("VendedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendedorId"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("SalarioMinimo")
                        .HasColumnType("float");

                    b.HasKey("VendedorId");

                    b.ToTable("Vendedores");
                });

            modelBuilder.Entity("projeto_dotnet_sql.Models.Veiculo", b =>
                {
                    b.HasOne("projeto_dotnet_sql.Models.Proprietario", "Proprietario")
                        .WithMany()
                        .HasForeignKey("ProprietarioCpfCnpj");

                    b.Navigation("Proprietario");
                });

            modelBuilder.Entity("projeto_dotnet_sql.Models.Venda", b =>
                {
                    b.HasOne("projeto_dotnet_sql.Models.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("NumeroChassi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projeto_dotnet_sql.Models.Vendedor", "Vendedor")
                        .WithMany("Vendas")
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("projeto_dotnet_sql.Models.Vendedor", b =>
                {
                    b.Navigation("Vendas");
                });
#pragma warning restore 612, 618
        }
    }
}
